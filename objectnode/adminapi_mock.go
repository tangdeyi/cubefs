// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cubefs/cubefs/sdk/master (interfaces: AdminAPIInterface)

// Package objectnode is a generated GoMock package.
package objectnode

import (
	reflect "reflect"

	proto "github.com/cubefs/cubefs/proto"
	gomock "github.com/golang/mock/gomock"
)

// MockAdminAPIInterface is a mock of AdminAPIInterface interface.
type MockAdminAPIInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAdminAPIInterfaceMockRecorder
}

// MockAdminAPIInterfaceMockRecorder is the mock recorder for MockAdminAPIInterface.
type MockAdminAPIInterfaceMockRecorder struct {
	mock *MockAdminAPIInterface
}

// NewMockAdminAPIInterface creates a new mock instance.
func NewMockAdminAPIInterface(ctrl *gomock.Controller) *MockAdminAPIInterface {
	mock := &MockAdminAPIInterface{ctrl: ctrl}
	mock.recorder = &MockAdminAPIInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdminAPIInterface) EXPECT() *MockAdminAPIInterfaceMockRecorder {
	return m.recorder
}

// AddDataReplica mocks base method.
func (m *MockAdminAPIInterface) AddDataReplica(arg0 uint64, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddDataReplica", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddDataReplica indicates an expected call of AddDataReplica.
func (mr *MockAdminAPIInterfaceMockRecorder) AddDataReplica(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddDataReplica", reflect.TypeOf((*MockAdminAPIInterface)(nil).AddDataReplica), arg0, arg1)
}

// AddMetaReplica mocks base method.
func (m *MockAdminAPIInterface) AddMetaReplica(arg0 uint64, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddMetaReplica", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddMetaReplica indicates an expected call of AddMetaReplica.
func (mr *MockAdminAPIInterfaceMockRecorder) AddMetaReplica(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddMetaReplica", reflect.TypeOf((*MockAdminAPIInterface)(nil).AddMetaReplica), arg0, arg1)
}

// CheckACL mocks base method.
func (m *MockAdminAPIInterface) CheckACL() (*proto.ClusterInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckACL")
	ret0, _ := ret[0].(*proto.ClusterInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckACL indicates an expected call of CheckACL.
func (mr *MockAdminAPIInterfaceMockRecorder) CheckACL() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckACL", reflect.TypeOf((*MockAdminAPIInterface)(nil).CheckACL))
}

// CreateDataPartition mocks base method.
func (m *MockAdminAPIInterface) CreateDataPartition(arg0 string, arg1 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDataPartition", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDataPartition indicates an expected call of CreateDataPartition.
func (mr *MockAdminAPIInterfaceMockRecorder) CreateDataPartition(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDataPartition", reflect.TypeOf((*MockAdminAPIInterface)(nil).CreateDataPartition), arg0, arg1)
}

// CreateDefaultVolume mocks base method.
func (m *MockAdminAPIInterface) CreateDefaultVolume(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDefaultVolume", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateDefaultVolume indicates an expected call of CreateDefaultVolume.
func (mr *MockAdminAPIInterfaceMockRecorder) CreateDefaultVolume(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDefaultVolume", reflect.TypeOf((*MockAdminAPIInterface)(nil).CreateDefaultVolume), arg0, arg1)
}

// CreateMetaPartition mocks base method.
func (m *MockAdminAPIInterface) CreateMetaPartition(arg0 string, arg1 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMetaPartition", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateMetaPartition indicates an expected call of CreateMetaPartition.
func (mr *MockAdminAPIInterfaceMockRecorder) CreateMetaPartition(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMetaPartition", reflect.TypeOf((*MockAdminAPIInterface)(nil).CreateMetaPartition), arg0, arg1)
}

// CreatePreLoadDataPartition mocks base method.
func (m *MockAdminAPIInterface) CreatePreLoadDataPartition(arg0 string, arg1 int, arg2, arg3 uint64, arg4 string) (*proto.DataPartitionsView, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePreLoadDataPartition", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(*proto.DataPartitionsView)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePreLoadDataPartition indicates an expected call of CreatePreLoadDataPartition.
func (mr *MockAdminAPIInterfaceMockRecorder) CreatePreLoadDataPartition(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePreLoadDataPartition", reflect.TypeOf((*MockAdminAPIInterface)(nil).CreatePreLoadDataPartition), arg0, arg1, arg2, arg3, arg4)
}

// CreateQuota mocks base method.
func (m *MockAdminAPIInterface) CreateQuota(arg0 string, arg1 []proto.QuotaPathInfo, arg2, arg3 uint64) (uint32, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateQuota", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(uint32)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateQuota indicates an expected call of CreateQuota.
func (mr *MockAdminAPIInterfaceMockRecorder) CreateQuota(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateQuota", reflect.TypeOf((*MockAdminAPIInterface)(nil).CreateQuota), arg0, arg1, arg2, arg3)
}

// CreateVersion mocks base method.
func (m *MockAdminAPIInterface) CreateVersion(arg0 string) (*proto.VolVersionInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVersion", arg0)
	ret0, _ := ret[0].(*proto.VolVersionInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateVersion indicates an expected call of CreateVersion.
func (mr *MockAdminAPIInterfaceMockRecorder) CreateVersion(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVersion", reflect.TypeOf((*MockAdminAPIInterface)(nil).CreateVersion), arg0)
}

// CreateVolName mocks base method.
func (m *MockAdminAPIInterface) CreateVolName(arg0, arg1 string, arg2 uint64, arg3, arg4 bool, arg5 string, arg6, arg7, arg8, arg9 int, arg10 bool, arg11, arg12 string, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20 int, arg21 bool, arg22 string, arg23 uint32, arg24, arg25 int64, arg26 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVolName", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateVolName indicates an expected call of CreateVolName.
func (mr *MockAdminAPIInterfaceMockRecorder) CreateVolName(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVolName", reflect.TypeOf((*MockAdminAPIInterface)(nil).CreateVolName), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26)
}

// DecommissionDataPartition mocks base method.
func (m *MockAdminAPIInterface) DecommissionDataPartition(arg0 uint64, arg1 string, arg2 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecommissionDataPartition", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DecommissionDataPartition indicates an expected call of DecommissionDataPartition.
func (mr *MockAdminAPIInterfaceMockRecorder) DecommissionDataPartition(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecommissionDataPartition", reflect.TypeOf((*MockAdminAPIInterface)(nil).DecommissionDataPartition), arg0, arg1, arg2)
}

// DecommissionMetaPartition mocks base method.
func (m *MockAdminAPIInterface) DecommissionMetaPartition(arg0 uint64, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecommissionMetaPartition", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DecommissionMetaPartition indicates an expected call of DecommissionMetaPartition.
func (mr *MockAdminAPIInterfaceMockRecorder) DecommissionMetaPartition(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecommissionMetaPartition", reflect.TypeOf((*MockAdminAPIInterface)(nil).DecommissionMetaPartition), arg0, arg1)
}

// DelBucketLifecycle mocks base method.
func (m *MockAdminAPIInterface) DelBucketLifecycle(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DelBucketLifecycle", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DelBucketLifecycle indicates an expected call of DelBucketLifecycle.
func (mr *MockAdminAPIInterfaceMockRecorder) DelBucketLifecycle(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DelBucketLifecycle", reflect.TypeOf((*MockAdminAPIInterface)(nil).DelBucketLifecycle), arg0)
}

// DeleteDataReplica mocks base method.
func (m *MockAdminAPIInterface) DeleteDataReplica(arg0 uint64, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteDataReplica", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteDataReplica indicates an expected call of DeleteDataReplica.
func (mr *MockAdminAPIInterfaceMockRecorder) DeleteDataReplica(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteDataReplica", reflect.TypeOf((*MockAdminAPIInterface)(nil).DeleteDataReplica), arg0, arg1)
}

// DeleteMetaReplica mocks base method.
func (m *MockAdminAPIInterface) DeleteMetaReplica(arg0 uint64, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMetaReplica", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMetaReplica indicates an expected call of DeleteMetaReplica.
func (mr *MockAdminAPIInterfaceMockRecorder) DeleteMetaReplica(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMetaReplica", reflect.TypeOf((*MockAdminAPIInterface)(nil).DeleteMetaReplica), arg0, arg1)
}

// DeleteQuota mocks base method.
func (m *MockAdminAPIInterface) DeleteQuota(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteQuota", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteQuota indicates an expected call of DeleteQuota.
func (mr *MockAdminAPIInterfaceMockRecorder) DeleteQuota(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteQuota", reflect.TypeOf((*MockAdminAPIInterface)(nil).DeleteQuota), arg0, arg1)
}

// DeleteVersion mocks base method.
func (m *MockAdminAPIInterface) DeleteVersion(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVersion", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteVersion indicates an expected call of DeleteVersion.
func (mr *MockAdminAPIInterfaceMockRecorder) DeleteVersion(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVersion", reflect.TypeOf((*MockAdminAPIInterface)(nil).DeleteVersion), arg0, arg1)
}

// DeleteVolume mocks base method.
func (m *MockAdminAPIInterface) DeleteVolume(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVolume", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteVolume indicates an expected call of DeleteVolume.
func (mr *MockAdminAPIInterfaceMockRecorder) DeleteVolume(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVolume", reflect.TypeOf((*MockAdminAPIInterface)(nil).DeleteVolume), arg0, arg1)
}

// DiagnoseDataPartition mocks base method.
func (m *MockAdminAPIInterface) DiagnoseDataPartition(arg0 bool) (*proto.DataPartitionDiagnosis, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DiagnoseDataPartition", arg0)
	ret0, _ := ret[0].(*proto.DataPartitionDiagnosis)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DiagnoseDataPartition indicates an expected call of DiagnoseDataPartition.
func (mr *MockAdminAPIInterfaceMockRecorder) DiagnoseDataPartition(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DiagnoseDataPartition", reflect.TypeOf((*MockAdminAPIInterface)(nil).DiagnoseDataPartition), arg0)
}

// DiagnoseMetaPartition mocks base method.
func (m *MockAdminAPIInterface) DiagnoseMetaPartition() (*proto.MetaPartitionDiagnosis, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DiagnoseMetaPartition")
	ret0, _ := ret[0].(*proto.MetaPartitionDiagnosis)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DiagnoseMetaPartition indicates an expected call of DiagnoseMetaPartition.
func (mr *MockAdminAPIInterfaceMockRecorder) DiagnoseMetaPartition() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DiagnoseMetaPartition", reflect.TypeOf((*MockAdminAPIInterface)(nil).DiagnoseMetaPartition))
}

// GetBucketLifecycle mocks base method.
func (m *MockAdminAPIInterface) GetBucketLifecycle(arg0 string) (*proto.LcConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBucketLifecycle", arg0)
	ret0, _ := ret[0].(*proto.LcConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBucketLifecycle indicates an expected call of GetBucketLifecycle.
func (mr *MockAdminAPIInterfaceMockRecorder) GetBucketLifecycle(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBucketLifecycle", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetBucketLifecycle), arg0)
}

// GetCluster mocks base method.
func (m *MockAdminAPIInterface) GetCluster() (*proto.ClusterView, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCluster")
	ret0, _ := ret[0].(*proto.ClusterView)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCluster indicates an expected call of GetCluster.
func (mr *MockAdminAPIInterfaceMockRecorder) GetCluster() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCluster", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetCluster))
}

// GetClusterIP mocks base method.
func (m *MockAdminAPIInterface) GetClusterIP() (*proto.ClusterIP, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterIP")
	ret0, _ := ret[0].(*proto.ClusterIP)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterIP indicates an expected call of GetClusterIP.
func (mr *MockAdminAPIInterfaceMockRecorder) GetClusterIP() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterIP", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetClusterIP))
}

// GetClusterInfo mocks base method.
func (m *MockAdminAPIInterface) GetClusterInfo() (*proto.ClusterInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterInfo")
	ret0, _ := ret[0].(*proto.ClusterInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterInfo indicates an expected call of GetClusterInfo.
func (mr *MockAdminAPIInterfaceMockRecorder) GetClusterInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterInfo", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetClusterInfo))
}

// GetClusterNodeInfo mocks base method.
func (m *MockAdminAPIInterface) GetClusterNodeInfo() (*proto.ClusterNodeInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterNodeInfo")
	ret0, _ := ret[0].(*proto.ClusterNodeInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterNodeInfo indicates an expected call of GetClusterNodeInfo.
func (mr *MockAdminAPIInterfaceMockRecorder) GetClusterNodeInfo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterNodeInfo", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetClusterNodeInfo))
}

// GetClusterParas mocks base method.
func (m *MockAdminAPIInterface) GetClusterParas() (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterParas")
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterParas indicates an expected call of GetClusterParas.
func (mr *MockAdminAPIInterfaceMockRecorder) GetClusterParas() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterParas", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetClusterParas))
}

// GetClusterStat mocks base method.
func (m *MockAdminAPIInterface) GetClusterStat() (*proto.ClusterStatInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterStat")
	ret0, _ := ret[0].(*proto.ClusterStatInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterStat indicates an expected call of GetClusterStat.
func (mr *MockAdminAPIInterfaceMockRecorder) GetClusterStat() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterStat", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetClusterStat))
}

// GetDataPartition mocks base method.
func (m *MockAdminAPIInterface) GetDataPartition(arg0 string, arg1 uint64) (*proto.DataPartitionInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataPartition", arg0, arg1)
	ret0, _ := ret[0].(*proto.DataPartitionInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDataPartition indicates an expected call of GetDataPartition.
func (mr *MockAdminAPIInterfaceMockRecorder) GetDataPartition(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataPartition", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetDataPartition), arg0, arg1)
}

// GetDataPartitionById mocks base method.
func (m *MockAdminAPIInterface) GetDataPartitionById(arg0 uint64) (*proto.DataPartitionInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataPartitionById", arg0)
	ret0, _ := ret[0].(*proto.DataPartitionInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDataPartitionById indicates an expected call of GetDataPartitionById.
func (mr *MockAdminAPIInterfaceMockRecorder) GetDataPartitionById(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataPartitionById", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetDataPartitionById), arg0)
}

// GetDiscardDataPartition mocks base method.
func (m *MockAdminAPIInterface) GetDiscardDataPartition() (*proto.DiscardDataPartitionInfos, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiscardDataPartition")
	ret0, _ := ret[0].(*proto.DiscardDataPartitionInfos)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDiscardDataPartition indicates an expected call of GetDiscardDataPartition.
func (mr *MockAdminAPIInterfaceMockRecorder) GetDiscardDataPartition() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiscardDataPartition", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetDiscardDataPartition))
}

// GetLatestVer mocks base method.
func (m *MockAdminAPIInterface) GetLatestVer(arg0 string) (*proto.VolVersionInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestVer", arg0)
	ret0, _ := ret[0].(*proto.VolVersionInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestVer indicates an expected call of GetLatestVer.
func (mr *MockAdminAPIInterfaceMockRecorder) GetLatestVer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestVer", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetLatestVer), arg0)
}

// GetMonitorPushAddr mocks base method.
func (m *MockAdminAPIInterface) GetMonitorPushAddr() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMonitorPushAddr")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMonitorPushAddr indicates an expected call of GetMonitorPushAddr.
func (mr *MockAdminAPIInterfaceMockRecorder) GetMonitorPushAddr() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMonitorPushAddr", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetMonitorPushAddr))
}

// GetNodeSet mocks base method.
func (m *MockAdminAPIInterface) GetNodeSet(arg0 string) (*proto.NodeSetStatInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodeSet", arg0)
	ret0, _ := ret[0].(*proto.NodeSetStatInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNodeSet indicates an expected call of GetNodeSet.
func (mr *MockAdminAPIInterfaceMockRecorder) GetNodeSet(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodeSet", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetNodeSet), arg0)
}

// GetQuota mocks base method.
func (m *MockAdminAPIInterface) GetQuota(arg0, arg1 string) (*proto.QuotaInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetQuota", arg0, arg1)
	ret0, _ := ret[0].(*proto.QuotaInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetQuota indicates an expected call of GetQuota.
func (mr *MockAdminAPIInterfaceMockRecorder) GetQuota(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetQuota", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetQuota), arg0, arg1)
}

// GetVerInfo mocks base method.
func (m *MockAdminAPIInterface) GetVerInfo(arg0 string) (*proto.VolumeVerInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVerInfo", arg0)
	ret0, _ := ret[0].(*proto.VolumeVerInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVerInfo indicates an expected call of GetVerInfo.
func (mr *MockAdminAPIInterfaceMockRecorder) GetVerInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVerInfo", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetVerInfo), arg0)
}

// GetVerList mocks base method.
func (m *MockAdminAPIInterface) GetVerList(arg0 string) (*proto.VolVersionInfoList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVerList", arg0)
	ret0, _ := ret[0].(*proto.VolVersionInfoList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVerList indicates an expected call of GetVerList.
func (mr *MockAdminAPIInterfaceMockRecorder) GetVerList(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVerList", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetVerList), arg0)
}

// GetVolumeSimpleInfo mocks base method.
func (m *MockAdminAPIInterface) GetVolumeSimpleInfo(arg0 string) (*proto.SimpleVolView, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVolumeSimpleInfo", arg0)
	ret0, _ := ret[0].(*proto.SimpleVolView)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVolumeSimpleInfo indicates an expected call of GetVolumeSimpleInfo.
func (mr *MockAdminAPIInterfaceMockRecorder) GetVolumeSimpleInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVolumeSimpleInfo", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetVolumeSimpleInfo), arg0)
}

// GetVolumeSimpleInfoWithFlowInfo mocks base method.
func (m *MockAdminAPIInterface) GetVolumeSimpleInfoWithFlowInfo(arg0 string) (*proto.SimpleVolView, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVolumeSimpleInfoWithFlowInfo", arg0)
	ret0, _ := ret[0].(*proto.SimpleVolView)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVolumeSimpleInfoWithFlowInfo indicates an expected call of GetVolumeSimpleInfoWithFlowInfo.
func (mr *MockAdminAPIInterfaceMockRecorder) GetVolumeSimpleInfoWithFlowInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVolumeSimpleInfoWithFlowInfo", reflect.TypeOf((*MockAdminAPIInterface)(nil).GetVolumeSimpleInfoWithFlowInfo), arg0)
}

// IsFreezeCluster mocks base method.
func (m *MockAdminAPIInterface) IsFreezeCluster(arg0 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsFreezeCluster", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// IsFreezeCluster indicates an expected call of IsFreezeCluster.
func (mr *MockAdminAPIInterfaceMockRecorder) IsFreezeCluster(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsFreezeCluster", reflect.TypeOf((*MockAdminAPIInterface)(nil).IsFreezeCluster), arg0)
}

// ListNodeSets mocks base method.
func (m *MockAdminAPIInterface) ListNodeSets(arg0 string) ([]*proto.NodeSetStat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNodeSets", arg0)
	ret0, _ := ret[0].([]*proto.NodeSetStat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNodeSets indicates an expected call of ListNodeSets.
func (mr *MockAdminAPIInterfaceMockRecorder) ListNodeSets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNodeSets", reflect.TypeOf((*MockAdminAPIInterface)(nil).ListNodeSets), arg0)
}

// ListQuota mocks base method.
func (m *MockAdminAPIInterface) ListQuota(arg0 string) ([]*proto.QuotaInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListQuota", arg0)
	ret0, _ := ret[0].([]*proto.QuotaInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListQuota indicates an expected call of ListQuota.
func (mr *MockAdminAPIInterfaceMockRecorder) ListQuota(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListQuota", reflect.TypeOf((*MockAdminAPIInterface)(nil).ListQuota), arg0)
}

// ListQuotaAll mocks base method.
func (m *MockAdminAPIInterface) ListQuotaAll() ([]*proto.VolInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListQuotaAll")
	ret0, _ := ret[0].([]*proto.VolInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListQuotaAll indicates an expected call of ListQuotaAll.
func (mr *MockAdminAPIInterfaceMockRecorder) ListQuotaAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListQuotaAll", reflect.TypeOf((*MockAdminAPIInterface)(nil).ListQuotaAll))
}

// ListVols mocks base method.
func (m *MockAdminAPIInterface) ListVols(arg0 string) ([]*proto.VolInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVols", arg0)
	ret0, _ := ret[0].([]*proto.VolInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListVols indicates an expected call of ListVols.
func (mr *MockAdminAPIInterfaceMockRecorder) ListVols(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVols", reflect.TypeOf((*MockAdminAPIInterface)(nil).ListVols), arg0)
}

// ListZones mocks base method.
func (m *MockAdminAPIInterface) ListZones() ([]*proto.ZoneView, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListZones")
	ret0, _ := ret[0].([]*proto.ZoneView)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListZones indicates an expected call of ListZones.
func (mr *MockAdminAPIInterfaceMockRecorder) ListZones() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListZones", reflect.TypeOf((*MockAdminAPIInterface)(nil).ListZones))
}

// LoadDataPartition mocks base method.
func (m *MockAdminAPIInterface) LoadDataPartition(arg0 string, arg1 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadDataPartition", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadDataPartition indicates an expected call of LoadDataPartition.
func (mr *MockAdminAPIInterfaceMockRecorder) LoadDataPartition(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadDataPartition", reflect.TypeOf((*MockAdminAPIInterface)(nil).LoadDataPartition), arg0, arg1)
}

// PutDataPartitions mocks base method.
func (m *MockAdminAPIInterface) PutDataPartitions(arg0 string, arg1 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutDataPartitions", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutDataPartitions indicates an expected call of PutDataPartitions.
func (mr *MockAdminAPIInterfaceMockRecorder) PutDataPartitions(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutDataPartitions", reflect.TypeOf((*MockAdminAPIInterface)(nil).PutDataPartitions), arg0, arg1)
}

// QueryBadDisks mocks base method.
func (m *MockAdminAPIInterface) QueryBadDisks() (*proto.BadDiskInfos, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryBadDisks")
	ret0, _ := ret[0].(*proto.BadDiskInfos)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QueryBadDisks indicates an expected call of QueryBadDisks.
func (mr *MockAdminAPIInterfaceMockRecorder) QueryBadDisks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryBadDisks", reflect.TypeOf((*MockAdminAPIInterface)(nil).QueryBadDisks))
}

// SetBucketLifecycle mocks base method.
func (m *MockAdminAPIInterface) SetBucketLifecycle(arg0 *proto.LcConfiguration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetBucketLifecycle", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetBucketLifecycle indicates an expected call of SetBucketLifecycle.
func (mr *MockAdminAPIInterfaceMockRecorder) SetBucketLifecycle(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetBucketLifecycle", reflect.TypeOf((*MockAdminAPIInterface)(nil).SetBucketLifecycle), arg0)
}

// SetClusterParas mocks base method.
func (m *MockAdminAPIInterface) SetClusterParas(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetClusterParas", arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetClusterParas indicates an expected call of SetClusterParas.
func (mr *MockAdminAPIInterfaceMockRecorder) SetClusterParas(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetClusterParas", reflect.TypeOf((*MockAdminAPIInterface)(nil).SetClusterParas), arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
}

// SetMetaNodeThreshold mocks base method.
func (m *MockAdminAPIInterface) SetMetaNodeThreshold(arg0 float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetMetaNodeThreshold", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetMetaNodeThreshold indicates an expected call of SetMetaNodeThreshold.
func (mr *MockAdminAPIInterfaceMockRecorder) SetMetaNodeThreshold(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMetaNodeThreshold", reflect.TypeOf((*MockAdminAPIInterface)(nil).SetMetaNodeThreshold), arg0)
}

// SetStrategy mocks base method.
func (m *MockAdminAPIInterface) SetStrategy(arg0, arg1, arg2, arg3, arg4 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetStrategy", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetStrategy indicates an expected call of SetStrategy.
func (mr *MockAdminAPIInterfaceMockRecorder) SetStrategy(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetStrategy", reflect.TypeOf((*MockAdminAPIInterface)(nil).SetStrategy), arg0, arg1, arg2, arg3, arg4)
}

// Topo mocks base method.
func (m *MockAdminAPIInterface) Topo() (*proto.TopologyView, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Topo")
	ret0, _ := ret[0].(*proto.TopologyView)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Topo indicates an expected call of Topo.
func (mr *MockAdminAPIInterfaceMockRecorder) Topo() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Topo", reflect.TypeOf((*MockAdminAPIInterface)(nil).Topo))
}

// UpdateNodeSet mocks base method.
func (m *MockAdminAPIInterface) UpdateNodeSet(arg0, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateNodeSet", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateNodeSet indicates an expected call of UpdateNodeSet.
func (mr *MockAdminAPIInterfaceMockRecorder) UpdateNodeSet(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateNodeSet", reflect.TypeOf((*MockAdminAPIInterface)(nil).UpdateNodeSet), arg0, arg1, arg2)
}

// UpdateQuota mocks base method.
func (m *MockAdminAPIInterface) UpdateQuota(arg0, arg1 string, arg2, arg3 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateQuota", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateQuota indicates an expected call of UpdateQuota.
func (mr *MockAdminAPIInterfaceMockRecorder) UpdateQuota(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateQuota", reflect.TypeOf((*MockAdminAPIInterface)(nil).UpdateQuota), arg0, arg1, arg2, arg3)
}

// UpdateVolume mocks base method.
func (m *MockAdminAPIInterface) UpdateVolume(arg0 *proto.SimpleVolView, arg1 int64, arg2 string, arg3 bool, arg4, arg5 int64, arg6 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateVolume", arg0, arg1, arg2, arg3, arg4, arg5, arg6)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateVolume indicates an expected call of UpdateVolume.
func (mr *MockAdminAPIInterfaceMockRecorder) UpdateVolume(arg0, arg1, arg2, arg3, arg4, arg5, arg6 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateVolume", reflect.TypeOf((*MockAdminAPIInterface)(nil).UpdateVolume), arg0, arg1, arg2, arg3, arg4, arg5, arg6)
}

// UpdateZone mocks base method.
func (m *MockAdminAPIInterface) UpdateZone(arg0 string, arg1 bool, arg2, arg3, arg4, arg5 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateZone", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateZone indicates an expected call of UpdateZone.
func (mr *MockAdminAPIInterfaceMockRecorder) UpdateZone(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateZone", reflect.TypeOf((*MockAdminAPIInterface)(nil).UpdateZone), arg0, arg1, arg2, arg3, arg4, arg5)
}

// UploadFlowInfo mocks base method.
func (m *MockAdminAPIInterface) UploadFlowInfo(arg0 string, arg1 *proto.ClientReportLimitInfo) (*proto.LimitRsp2Client, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFlowInfo", arg0, arg1)
	ret0, _ := ret[0].(*proto.LimitRsp2Client)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadFlowInfo indicates an expected call of UploadFlowInfo.
func (mr *MockAdminAPIInterfaceMockRecorder) UploadFlowInfo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFlowInfo", reflect.TypeOf((*MockAdminAPIInterface)(nil).UploadFlowInfo), arg0, arg1)
}

// VolExpand mocks base method.
func (m *MockAdminAPIInterface) VolExpand(arg0 string, arg1 uint64, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VolExpand", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// VolExpand indicates an expected call of VolExpand.
func (mr *MockAdminAPIInterfaceMockRecorder) VolExpand(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VolExpand", reflect.TypeOf((*MockAdminAPIInterface)(nil).VolExpand), arg0, arg1, arg2)
}

// VolShrink mocks base method.
func (m *MockAdminAPIInterface) VolShrink(arg0 string, arg1 uint64, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VolShrink", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// VolShrink indicates an expected call of VolShrink.
func (mr *MockAdminAPIInterfaceMockRecorder) VolShrink(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VolShrink", reflect.TypeOf((*MockAdminAPIInterface)(nil).VolShrink), arg0, arg1, arg2)
}
